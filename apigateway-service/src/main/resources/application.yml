server:
  port: 8080

eureka:
  instance:
    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true # Eureka 서버로부터 인스턴스들의 정보를 주기적으로 가져오겠다고 설정.
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka #서버가 가지고 있는 위치 값 지정

spring:
  application:
    name: apigateway-service
  cloud:
    gateway:
      routes:
        - id: user-service
          uri: lb://USER-SERVICE #유레카에 등록되는 서버 인스턴스 이름
          predicates: #조건절
          - Path=/first-service/**
          filters:
#            - AddRequestHeader=first-request, first-requests-header2
#            - AddRequestHeader=first-response, first-responses-header2
             - name: CustomFilter
             - name: LoggingFilter
               args:
                 baseMessage: Hi, there.
                 preLogger: true
                 postLogger: true

        - id: second-service
          uri: lb://MY-SECOND-SERVICE
          predicates: #조건절
            - Path=/second-service/**
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway GlobalFilter
            preLogger: true
            postLogger: true


#Netty가 WAS로 동작함. 비동기를 위함.